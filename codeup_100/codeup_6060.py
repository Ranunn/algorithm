'''
정수 2개를 비트단위로 and 연산한 후 그 결과를 정수로 출력하기

-----------------------------------------------------------
비트단위(bitwise) 연산자는 다음과 같다.
~    : bitwise not
&    : bitwise and
|    : bitwise or
^    : bitwise xor
<<   : bitwise left shift
>>   : bitwise right shift

-----------------------------------------------------------
컴퓨터에 저장되는 모든 데이터들은 0과 1로만 구성되는 비트단위로 바뀌어 저장된다.
이 때, 양의 정수는 2진수 형태로, 음의 정수는 2의 보수 표현 방법으로 저장된다.

양의 정수 3를 32비트로 표현하면
00000000 00000000 00000000 00000011

양의 정수 5를 32비트로 표현하면
00000000 00000000 00000000 00000101

3 & 5를 32비트로 표현하면
00000000 00000000 00000000 00000001

즉, 비트단위 and 연산은 두 비트열이 주어졌을 때 둘 다 1인 부분의 자리만 1로 만드는 것과 같다.
-----------------------------------------------------------
비트단위 and 연산을 이용하면 비트열의 특정부분만 모두 0으로 만들 수 있는데
192.168.0.31   : 11000000.10101000.00000000.00011111
255.255.255.0  : 11111111.11111111.11111111.00000000
  & 연산 결과   : 11000000.10101000.00000000.00000000

192.168.0.0과 같은 결과값은 네트워크에 연결되어 있는 두 개의 컴퓨터가
데이터를 주고 받기 위해 같은 네트워크에 있는지 아닌지를 판단하는데 사용된다.

이러한 비트단위 연산은 빠른 계산이 필요한 그래픽처리에서
마스크연산(특정부분을 가리고 출력)을 수행하는 데에도 효과적으로 사용된다.

-----------------------------------------------------------
입력예시
3 5

출력예시
1

'''

while(True):
    nums = input('정수 2개를 입력해주세요. (예) 3 7\n->')

    try:
        a, b = nums.split()
        a = int(a)
        b = int(b)
    except:
        print('잘못 입력하였습니다.')
        continue
    else:
        break

print(a & b)
