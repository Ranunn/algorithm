'''
정수 2개를 비트단위로 xor 연산한 후 그 결과를 정수로 출력하기

-----------------------------------------------------------
비트단위(bitwise) 연산자는 다음과 같다.
~    : bitwise not
&    : bitwise and
|    : bitwise or
^    : bitwise xor
<<   : bitwise left shift
>>   : bitwise right shift

-----------------------------------------------------------
컴퓨터에 저장되는 모든 데이터들은 0과 1로만 구성되는 비트단위로 바뀌어 저장된다.
이 때, 양의 정수는 2진수 형태로, 음의 정수는 2의 보수 표현 방법으로 저장된다.

양의 정수 3를 32비트로 표현하면
00000000 00000000 00000000 00000011

양의 정수 5를 32비트로 표현하면
00000000 00000000 00000000 00000101

3 ^ 5를 32비트로 표현하면
00000000 00000000 00000000 00000110

즉, 비트단위 xor 연산은 두 비트열이 주어졌을 때
비트단위의 값이 다를 경우에는 1, 같을 경우에는 0으로 만드는 것과 같다.

-----------------------------------------------------------
두 장의 이미지가 겹쳐졌을 때, 색이 다른 부분을 처리할 수 있다.
배경이 되는 그림과 배경 위에서 움직이는 그림이 있을 때,
두 그림에서 차이만 골라내 배경 위에서 움직이는 그림의 색으로 바꿔주면
전체 그림을 구성하는 모든 점들의 색을 다시 계산해 입히지 않으면서도
보다 효과적으로 그림을 처리할 수 있다.
eX) 비행기 슈팅 게임 등

-----------------------------------------------------------
입력예시
3 5

출력예시
6

'''

while(True):
    nums = input('정수 2개를 입력해주세요. (예) 3 7\n->')

    try:
        a, b = nums.split()
        a = int(a)
        b = int(b)
    except:
        print('잘못 입력하였습니다.')
        continue
    else:
        break

print(a ^ b)
